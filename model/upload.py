from model import CGD
from dataset import CommerceImageDataset
import torch
from torch.utils.data import DataLoader
import pandas as pd
from tqdm import tqdm
from elasticsearch import Elasticsearch, helpers


def insertData(data_dict : dict):
    index="hyreco512"
    docs = []
    data_dict_keys = list(data_dict.keys())
    for i in tqdm(range(len(data_dict))):
        image_name = commerce_id.iloc[i][1]
        item_no = commerce_id.iloc[i][0]
        doc = {
            '_index' : index,
            '_id' : item_no,
            '_source' : {
                "image_name" : image_name,
                "retrieval_vector" : data_dict[image_name].tolist()
            }
        }
        docs.append(doc)
        #client.index(index=index, doc_type="_doc", body=doc)
        if (i%100==0):
            helpers.bulk(client, docs)
            docs = []
            
    helpers.bulk(client, docs)
    
    client.indices.refresh(index=index)

if __name__ == '__main__':

    print("load csv file...")
    commerce_df = pd.read_csv("commerce_img_features.csv")
    commerce_features = {}
    num_rows = len(commerce_df)
    num_cols = len(commerce_df.iloc[0])
    for i in tqdm(range(num_rows)):
        tmp_data = []
        for j in range(1,num_cols):
            tmp_data.append(commerce_df.iloc[i,j])
        tmp_data = torch.Tensor(tmp_data)
        commerce_features[commerce_df.iloc[i,0]] = tmp_data

    print("Upload to Elastic Search")
    # Password for the 'elastic' user generated by Elasticsearch
    ELASTIC_PASSWORD = ""

    # Found in the 'Manage Deployment' page
    CLOUD_ID = ""

    # Create the client instance
    client = Elasticsearch(
        cloud_id=CLOUD_ID,
        basic_auth=("elastic", ELASTIC_PASSWORD)
    )

    # Successful response!
    print("Login :",client.info())

    commerce_id = pd.read_csv("commerce_data/sampled_products.csv")
    commerce_id = commerce_id.loc[:,["item_no","image_name"]]
    commerce_id = commerce_id.drop(commerce_id[commerce_id['image_name'] == "10ec6bea769ac095743a9455ae069981"].index) #error image

    insertData(commerce_features)
